"use strict";angular.module("cccLoanCalcNgGruntApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/contact",{templateUrl:"views/contact.html",controller:"ContactCtrl",controllerAs:"contact"}).otherwise({redirectTo:"/"})}]).directive("isActiveLink",["$location",function(a){return{restrict:"A",link:function(b,c,d,e){var f="active",g=d.ngHref;g=g.substring(1),b.location=a,b.$watch("location.path()",function(a){g===a?c.parent().addClass(f):c.parent().removeClass(f)})}}}]),angular.module("cccLoanCalcNgGruntApp").controller("MainCtrl",["$scope",function(a){a.data={principal:parseFloat("1000"),principalText:"",rate:parseFloat("1"),termLength:parseInt("1"),termLengthType:"years",monthlyPayment:parseFloat(""),totalInterest:0,grandTotal:0},a.calculate=function(){a.data.principal=a.cleanNumber(String(a.data.principal),2),a.data.rate=a.cleanNumber(String(a.data.rate),4);var b=0,c=a.data.principal,d=a.data.rate/100,e=a.data.termLength,f=12;"months"===a.data.termLengthType&&(e/=12,f=12);var g=-1*e*f;a.data.monthlyPayment=b=c*d/(f*(1-Math.pow(1+d/f,g))),a.data.totalInterest=a.calculateTotalInterest(b,c,e,f),a.data.grandTotal=a.calculateGrandTotal(b,e,f)},a.calculateTotalInterest=function(a,b,c,d){return a*c*d-b},a.calculateGrandTotal=function(a,b,c){return a*b*c},a.cleanNumber=function(a,b){a=a.replace(/[^\d.]/g,"");var c=a.split(".");return c.length>2?(window.alert("You have too many decimals!"),parseFloat(c[0]+"."+c[1])):2===c.length&&c[1].length>b?(window.alert("You can only specify up to "+b+" decimal places."),parseFloat(c[0]+"."+c[1].substr(0,b))):a}}]),angular.module("cccLoanCalcNgGruntApp").controller("AboutCtrl",["$scope",function(a){}]),angular.module("cccLoanCalcNgGruntApp").controller("ContactCtrl",["$scope",function(a){}]),angular.module("cccLoanCalcNgGruntApp").run(["$templateCache",function(a){a.put("views/about.html",'<h1>About</h1> <div class="container"> <p>This is a programming excercise by Brett Brewer. It employs the following technologies:</p> <ul> <li><a href="http://getbootstrap.com/">Bootstrap 3</a></li> <li><a href="http://www.flaticon.com/">Icon fonts from Flaticon</a></li> <li><a href="http://sass-lang.com/" target="_blank">SASS (.scss &amp; .less)</a></li> <li><a href="https://angularjs.org/">Angular.js</a></li> <li><a href="https://nodejs.org" target="_blank">Node.js</a> and <a href="https://www.npmjs.com/" target="_blank">NPM</a></li> <li><a href="http://git-scm.com/" target="_blank">Git - version control</a></li> <li> <ul> <li><a href="http://bower.io/" target="_blank">Bower package manager</a></li> <li><a href="http://gruntjs.com/" target="_blank">Grunt Javascript Task Runner</a></li> </ul> </li> <li><a href="http://yeoman.io" target="_blank">Yeoman full stack generator.</a></li> <li> <ul> <li><a href="https://github.com/yeoman/yo" target="_blank">Yo - cli scaffolding tool for Yeoman generators</a></li> <li><a href="https://github.com/yeoman/generator-angular" target="_blank">Angular generator for Yeoman</a></li> </ul> </li> <li><a href="http://compass-style.org/" target="_blank">Compass</a> (running on <a href="http://rubyinstaller.org/" target="_blank">Ruby for Windows</a>)</li> <li><a href="http://www.sublimetext.com/" target="_blank">Sublime Text (editor)</a></li> </ul> <p>For this excercise I chose to use the Yeoman generator-angular package, which generates a starter site with Bootstrap, Angular and a few default pages and routes to save time setting up a new development site. The site is served locally via Gulp by running "gulp serve" from the commandline in the project root directory. It also uses the "live update" functionality of Gulp to automatically re-compile the assets and reload the site any time one of the scss, js or html pages is modified.</p> <p>To set up a similar environment on windows you would do the following</p> <ol> <li><a href="https://github.com/git-for-windows/git/releases/download/v2.6.1.windows.1/Git-2.6.1-64-bit.exe" title="Download Git Installer for 64-bit Windows">Install Git</a></li> <li><a href="https://nodejs.org/dist/v4.2.0/node-v4.2.0-x64.msi" title="Download Node.js installer for 64-bit Windows">Install Node.js</a></li> <li><a href="http://dl.bintray.com/oneclick/rubyinstaller/rubyinstaller-2.2.3-x64.exe" title="Download Ruby installer for 64-bit Windows">Install Ruby</a></li> <li>Open a command prompt and enter the following commands:<br> <code style="display:block;padding:2em"> gem install compass<br> npm install --global npm@latest<br> npm install --global yo bower grunt-cli<br> npm install --global generator-angular@0.11.1<br> mkdir myproject<br> cd myproject<br> yo angular<br> </code> Then answer "Yes" to use Sass with Compass and "Yes" to include Bootstrap. Then hit enter to accept the remaining defaults. You now have an Angular.js starter site. Enter "grunt serve" and open a browser to "http://localhost:9000/" to view the site. </li> </ol> </div>'),a.put("views/contact.html",'<h1>Contact</h1> <div class="container"> <p>Feel free to contact me any time.</p> <address> <strong>email:</strong> <a href="mailto:brett@brettbrewer.com" title="Opens in your default email client">brett@brettbrewer.com</a><br> <strong>voip:</strong> 520.628.3767<br> <strong>cell:</strong> 520.262.9159<br> <strong>skype:</strong> electrongunner<br> <br> <strong>Address:</strong> <br> Brett Brewer<br> 1333 Greenwillow Lane<br> Unit 3<br> Glenview, IL. 60025<br> </address> </div>'),a.put("views/main.html",'<h1>Simple Fixed Interest Rate Calculator</h1> <div class="container" ng-init="calculate()"> <form name="calcForm" class="form-horizontal css-form" novalidate> <div class="form-group row"> <div class="input-group"> <span class="input-group-addon"> <label for="principal" class="control-label" style="padding:0;margin:1px 0 0 0">Principal</label> </span> <div class="icon-addon addon-md"> <input id="principal" type="text" ng-model="data.principal" value="{{data.principal}}" ng-change="calculate()" class="form-control" aria-describedby="principal-dollar-sign" required> <label for="principal" class="glyphicon flaticon-dollar185" rel="tooltip" title="Principal"></label> </div> </div> <div ng-show="calcForm.principal.$touched && calcForm.principal.$error.required">Please enter a principal amount.</div> </div> <div class="form-group row"> <div class="input-group"> <span class="input-group-addon"> <label for="term-length" class="control-label" style="padding:0;margin:1px 0 0 0">Term Length</label> </span> <input id="term-length" type="text" ng-model="data.termLength" value="{{data.termLength | number:0}" class="form-control" ng-change="calculate()"> <span class="input-group-addon"> <input id="term-length-years" name="termLengthType" type="radio" value="years" aria-label="Years" ng-model="data.termLengthType" ng-change="calculate()"> <label for="term-length-years">Years</label> <input id="term-length-months" name="termLengthType" type="radio" value="months" aria-label="Months" ng-model="data.termLengthType" ng-change="calculate()" style="padding:0;margin:0 0 -3px 0"> <label for="term-length-months">Months</label> </span> </div> </div> <div class="form-group row"> <div class="input-group"> <span class="input-group-addon"> <label for="rate" class="control-label" style="padding:0">Interest Rate</label> </span> <div class="icon-addon addon-md addon-rt"> <input id="rate" type="text" ng-model="data.rate" value="{{data.rate | number:4}}" class="form-control flaticon-percentage16" aria-describedby="rate-percent-sign" ng-change="calculate()"> <label class="glyphicon addon-rt flaticon-percentage16" id="rate-percent-sign" title="percent"></label> </div> </div> </div> <!--<button type="button" ng-click="calculate()">Calculate</button>--> </form> <div> <h3>Monthly Payment: <span ng-model="data.monthlyPayment">{{data.monthlyPayment | currency}}</span> </h3> </div> <div> <h3>Total Interest Paid: <span ng-model="data.totalInterest">{{data.totalInterest | currency}}</span> </h3> </div> <div> <h3>Total Amount Paid: <span ng-model="data.grandTotal">{{data.grandTotal | currency}}</span> </h3> </div> </div>')}]);